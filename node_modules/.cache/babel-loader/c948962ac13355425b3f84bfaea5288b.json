{"ast":null,"code":"var _jsxFileName = \"/Users/homesh/Desktop/reactapp/country-dropdown/country-dropdown-with-flags-for-react/src/dropdown-comp.jsx\";\nimport React from 'react';\nimport $ from 'jquery';\nimport './js/countrySelect.js';\nimport './css/countrySelect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CountryDropdown extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => console.log(e);\n  }\n\n  componentDidMount() {\n    this.$el = $(this.el);\n    this.$el.countrySelect({\n      preferredCountries: ['ca', 'gb', 'us']\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: el => this.el = el,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default CountryDropdown;","map":{"version":3,"sources":["/Users/homesh/Desktop/reactapp/country-dropdown/country-dropdown-with-flags-for-react/src/dropdown-comp.jsx"],"names":["React","$","CountryDropdown","Component","handleChange","e","console","log","componentDidMount","$el","el","countrySelect","preferredCountries","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,uBAAP;AACA,OAAO,yBAAP;;;AAGA,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAO1CC,YAP0C,GAO1BC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAPoB;AAAA;;AAC1CG,EAAAA,iBAAiB,GAAE;AACf,SAAKC,GAAL,GAAWR,CAAC,CAAC,KAAKS,EAAN,CAAZ;AACA,SAAKD,GAAL,CAASE,aAAT,CAAuB;AACnBC,MAAAA,kBAAkB,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb;AADD,KAAvB;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACQ;AAAQ,MAAA,GAAG,EAAEH,EAAE,IAAI,KAAKA,EAAL,GAAUA,EAA7B;AAAiC,MAAA,QAAQ,EAAEN;AAA3C;AAAA;AAAA;AAAA;AAAA,YADR;AAGH;;AAZyC;;AAe9C,eAAeF,eAAf","sourcesContent":["import React from 'react'\nimport $ from 'jquery'\nimport './js/countrySelect.js'\nimport './css/countrySelect.css'\n\n\nclass CountryDropdown extends React.Component {\n    componentDidMount(){\n        this.$el = $(this.el)\n        this.$el.countrySelect({\n            preferredCountries: ['ca', 'gb', 'us']\n        });\n    }\n    handleChange = (e) => console.log(e);\n    render() {\n        return (\n                <input  ref={el => this.el = el} onChange={handleChange}/>\n         )\n    }\n}\n\nexport default CountryDropdown"]},"metadata":{},"sourceType":"module"}